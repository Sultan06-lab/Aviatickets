{"version":3,"file":"unit-fns.cjs.development.js","sources":["../src/core/isUnit.ts","../src/core/unitMax.ts","../src/core/unitMin.ts","../src/number/clip.ts","../src/number/fraction.ts","../src/number/mapRange.ts","../src/number/mapFrom.ts","../src/number/mapTo.ts","../src/number/wrap.ts","../src/constants.ts","../src/number/radiansToUnit.ts","../src/number/subdivision.ts","../src/number/toIndex.ts","../src/1d/bounce.ts","../src/1d/center.ts","../src/1d/circular.ts","../src/1d/cosine.ts","../src/1d/cubic.ts","../src/1d/exponential.ts","../src/1d/inverse.ts","../src/1d/linear.ts","../src/1d/quadratic.ts","../src/1d/quartic.ts","../src/1d/quintic.ts","../src/2d/threshold.ts","../src/1d/round.ts","../src/1d/sine.ts","../src/1d/triangle.ts","../src/2d/angle.ts","../src/2d/difference.ts","../src/2d/distance.ts","../src/2d/maximum.ts","../src/2d/minimum.ts","../src/2d/multiply.ts","../src/2d/offset.ts","../src/2d/peak.ts","../src/2d/quantize.ts","../src/2d/radial.ts","../src/2d/repeat.ts","../src/3d/clamp.ts","../src/3d/mix.ts","../src/3d/toggle.ts","../src/other/branch.ts","../src/other/createNearestLookup.ts","../src/other/fit.ts"],"sourcesContent":["import { Unit } from './Unit'\n\nexport const isUnit = (value: number): value is Unit => {\n  return value >= 0 && value <= 1\n}\n","import { Unit } from './Unit'\n\nexport const unitMax = 1 as Unit\n","import { Unit } from './Unit'\n\nexport const unitMin = 0 as Unit\n","import { Unit } from '../core/Unit'\nimport { unitMin } from '../core/unitMin'\nimport { unitMax } from '../core/unitMax'\n\nexport const clip = (value: number): Unit => {\n  return Math.max(unitMin, Math.min(unitMax, value)) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const fraction = (value: number): Unit => {\n  return Math.abs(value % 1) as Unit\n}\n","export const mapRange = <T extends number = number>(\n  inMin: number,\n  inMax: number,\n  outMin: T,\n  outMax: T,\n  value: number\n): T => {\n  return (((value - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin) as T\n}\n","import { Unit } from '../core/Unit'\nimport { unitMin } from '../core/unitMin'\nimport { unitMax } from '../core/unitMax'\nimport { mapRange } from './mapRange'\n\nexport const mapFrom = (inMin: number, inMax: number, value: number): Unit => {\n  return mapRange(inMin, inMax, unitMin, unitMax, value)\n}\n","import { Unit } from '../core/Unit'\n\nexport const mapTo = <T extends number = number>(\n  outMin: number,\n  outMax: number,\n  unit: Unit\n): T => {\n  return (outMin * (1 - unit) + outMax * unit) as T\n}\n","import { unitMax } from '../core/unitMax'\nimport { Unit } from '../core/Unit'\nimport { isUnit } from '../core/isUnit'\n\nexport const wrap = (value: number): Unit => {\n  if (isUnit(value)) return value\n\n  if (value % 1 === 0) return 1 as Unit\n\n  return (value < 0 ? unitMax - (-value % unitMax) : value % unitMax) as Unit\n}\n","export const HALF_PI = Math.PI / 2\nexport const TWO_PI = Math.PI * 2\n","import { Unit } from '../core/Unit'\nimport { wrap } from './wrap'\nimport { HALF_PI } from '../constants'\n\nexport const radiansToUnit = (radians: number): Unit => {\n  return wrap(radians / HALF_PI)\n}\n","import { Unit } from '../core/Unit'\nimport { unitMax } from '../core/unitMax'\n\nexport const subdivision = (value: number): Unit => {\n  return (unitMax / value) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const toIndex = (length: number, unit: Unit): number => {\n  return Math.floor(unit * length)\n}\n","import { Unit } from '../core/Unit'\n\nexport const bounce = (unit: Unit): Unit => {\n  const n1 = 7.5625\n  const d1 = 2.75\n\n  if (unit < 1 / d1) {\n    return (n1 * unit * unit) as Unit\n  } else if (unit < 2 / d1) {\n    const a = unit - 1.5 / d1\n    return (n1 * a * a + 0.75) as Unit\n  } else if (unit < 2.5 / d1) {\n    const a = unit - 2.25 / d1\n    return (n1 * a * a + 0.9375) as Unit\n  } else {\n    const a = unit - 2.625 / d1\n    return (n1 * a * a + 0.984375) as Unit\n  }\n}\n","import { Unit } from '../'\n\nexport const center = (unit: Unit): Unit => {\n  return Math.abs(unit * 2 - 1)\n}\n","import { Unit } from '../core/Unit'\n\nexport const circular = (unit: Unit): Unit => {\n  return (1 - Math.sqrt(1 - Math.pow(unit, 2))) as Unit\n}\n","import { Unit } from '../core/Unit'\nimport { HALF_PI } from '../constants'\n\nexport const cosine = (unit: Unit): Unit => {\n  return Math.cos(unit * HALF_PI) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const cubic = (unit: Unit): Unit => {\n  return (unit * unit * unit) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const exponential = (unit: Unit): Unit => {\n  return (unit === 0 ? 0 : Math.pow(2, 10 * unit - 10)) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const inverse = (unit: Unit): Unit => {\n  return (1 - unit) as Unit\n}\n","import { Unit } from 'core/Unit'\n\nexport const linear = (unit: Unit): Unit => {\n  return unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const quadratic = (unit: Unit): Unit => {\n  return (unit * unit) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const quartic = (unit: Unit): Unit => {\n  return (unit * unit * unit * unit) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const quintic = (unit: Unit): Unit => {\n  return (unit * unit * unit * unit * unit) as Unit\n}\n","import { unitMax } from '../core/unitMax'\nimport { unitMin } from '../core/unitMin'\nimport { Unit } from 'core/Unit'\n\nexport const threshold = (threshold: Unit, t: Unit): Unit => {\n  return t < threshold ? unitMin : unitMax\n}\n","import { threshold } from '../2d/threshold'\nimport { Unit } from '../core/Unit'\n\nexport const round = (unit: Unit): Unit => {\n  return threshold(0.5 as Unit, unit)\n}\n","import { Unit } from '../core/Unit'\nimport { HALF_PI } from '../constants'\n\nexport const sine = (unit: Unit): Unit => {\n  return Math.sin(unit * HALF_PI) as Unit\n}\n","import { Unit } from '../core/Unit'\n\nexport const triangle = (unit: Unit): Unit => {\n  return 1 - Math.abs(unit * 2 - 1)\n}\n","import { Unit } from '../core/Unit'\nimport { radiansToUnit } from '../number/radiansToUnit'\n\nexport const angle = (x: Unit, y: Unit): Unit => {\n  return radiansToUnit(Math.atan(y / x))\n}\n","import { Unit } from '../core/Unit'\n\nexport const difference = (a: Unit, b: Unit): Unit => {\n  return Math.abs(a - b)\n}\n","import { Unit } from '../core/Unit'\n\nexport const distance = (x: Unit, y: Unit): Unit => {\n  return Math.sqrt(x * x + y * y) / Math.SQRT2\n}\n","import { Unit } from 'core/Unit'\n\nexport const maximum = Math.max as (a: Unit, b: Unit) => Unit\n","import { Unit } from 'core/Unit'\n\nexport const minimum = Math.min as (a: Unit, b: Unit) => Unit\n","import { Unit } from '../core/Unit'\n\nexport const multiply = (a: Unit, b: Unit): Unit => {\n  return (a * b) as Unit\n}\n","import { wrap } from '../number/wrap'\nimport { Unit } from 'core/Unit'\n\nexport const offset = (amount: Unit, unit: Unit): Unit => {\n  return wrap(amount + unit)\n}\n","import { Unit } from '../core/Unit'\n\nexport const peak = (peak: Unit, unit: Unit): Unit => {\n  return unit < peak ? unit / peak : ((unit - peak) * -1) / (1 - peak) + 1\n}\n","import { Unit } from '../core/Unit'\nimport { unitMax } from '../core/unitMax'\n\nexport const quantize = (fraction: Unit, value: Unit): Unit => {\n  if (fraction === 0) return value\n\n  const bands = unitMax / fraction\n\n  return Math.round(value * bands) / bands\n}\n","import { distance } from './distance'\n\n// TODO: is this unit and should it be in this dir?\nexport const radial = (x: number, y: number) => {\n  return 1 - distance(x * 2 - 1, y * 2 - 1)\n}\n","import { Unit } from 'core/Unit'\n\nexport const repeat = (scale: Unit, t: Unit): Unit => {\n  const times = 1 / scale\n  return ((t * times) % 1) as Unit\n}\n","import { Unit } from 'core/Unit'\n\nexport const clamp = (min: Unit, max: Unit, val: Unit): Unit => {\n  return val > max ? max : val < min ? min : val\n}\n","import { mapTo } from '../number/mapTo'\nimport { Unit } from 'core/Unit'\n\n// typed alias\nexport const mix = mapTo as (a: Unit, b: Unit, t: Unit) => Unit\n","import { Unit } from 'core/Unit'\n\nexport const toggle = (a: Unit, b: Unit, t: Unit): Unit => {\n  return t < 0.5 ? a : b\n}\n","import { Unit } from 'core/Unit'\n\nexport const branch = (\n  a: (unit: Unit) => Unit,\n  b: (unit: Unit) => Unit,\n  unit: Unit\n) => {\n  return unit > 0.5 ? b(unit) : a(unit)\n}\n","import { Unit } from '..'\nimport { toIndex } from '../number/toIndex'\n\nexport const createNearestLookup = (\n  length: number,\n  onSample: (unit: Unit) => Unit\n) => {\n  // TODO: could it be 32? or even pass the constructor in so it can be chosen from the outside :`)\n  const lookupTable = new Float64Array(length)\n\n  for (let i = 0; i < length; i++) {\n    lookupTable[i] = onSample(i / length)\n  }\n\n  return (unit: Unit) => {\n    return lookupTable[toIndex(length, unit)]\n  }\n}\n","import { Unit } from '../core/Unit'\nimport { repeat } from '../2d/repeat'\nimport { subdivision } from '../number/subdivision'\nimport { toIndex } from '../number/toIndex'\n\nexport const fit = (fns: Array<(unit: Unit) => Unit>, unit: Unit): Unit => {\n  const fnsLength = fns.length\n  const t = repeat(subdivision(fnsLength), unit)\n  const fn = fns[toIndex(fnsLength, unit)]\n\n  return fn(t)\n}\n"],"names":["isUnit","value","unitMax","unitMin","clip","Math","max","min","fraction","abs","mapRange","inMin","inMax","outMin","outMax","mapFrom","mapTo","unit","wrap","HALF_PI","PI","radiansToUnit","radians","subdivision","toIndex","length","floor","bounce","n1","d1","a","center","circular","sqrt","pow","cosine","cos","cubic","exponential","inverse","linear","quadratic","quartic","quintic","threshold","t","round","sine","sin","triangle","angle","x","y","atan","difference","b","distance","SQRT2","maximum","minimum","multiply","offset","amount","peak","quantize","bands","radial","repeat","scale","times","clamp","val","mix","toggle","branch","createNearestLookup","onSample","lookupTable","Float64Array","i","fit","fns","fnsLength","fn"],"mappings":"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"}